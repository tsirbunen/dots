directive @pollInputValidation on FIELD_DEFINITION
directive @isPollOwner on FIELD_DEFINITION

enum DataClass {
  TEXT
  NUMBER
  DATE
}

enum PollState {
  EDIT
  VOTE
  CLOSED
}

input CreatePollInput {
  ownerId: ID!
  ownerName: String
  question: String!
  options: [String!]!
  isAnonymous: Boolean!
  dataClass: DataClass!
  totalVotesCountMax: Int!
  optionVotesCountMax: Int!
  showStatusWhenVoting: Boolean!
}

input OptionEditData {
  optionId: ID
  content: String!
}

input EditPollInput {
  pollId: ID!
  question: String
  options: [OptionEditData]
  isAnonymous: Boolean
  dataClass: DataClass
  totalVotesCountMax: Int
  optionVotesCountMax: Int
  showStatusWhenVoting: Boolean
}

input FindPollInput {
  id: ID
  code: String
}

type Poll {
  id: ID!
  ownerId: ID!
  code: String!
  question: String!
  isAnonymous: Boolean!
  totalVotesCountMax: Int!
  optionVotesCountMax: Int!
  showStatusWhenVoting: Boolean!
  state: PollState!
  token: String
  deletedAt: Timestamp
  createdAt: Timestamp!
  updatedAt: Timestamp!
}

extend type Query {
  findPoll(input: FindPollInput): Poll
  getPollCountInDatabase: Int
  findPollsByCode(codes: [String!]!): [Poll]
}

extend type Mutation {
  createPoll(input: CreatePollInput!): Poll! @pollInputValidation
  editPoll(input: EditPollInput!): Poll! @isPollOwner @pollInputValidation
  openPoll(pollId: ID!): Poll! @isPollOwner
  closePoll(pollId: ID!): Poll! @isPollOwner
  deletePoll(pollId: ID!): Poll! @isPollOwner
}
